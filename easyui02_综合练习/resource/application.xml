<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd">

<!--    扫描-->
    <context:component-scan base-package="com.sxt"></context:component-scan>

<!--    引入 db文件 配置数据库连接池 -->
    <context:property-placeholder location="classpath:db.properties"></context:property-placeholder>

    <!--    配置 数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

<!--   获取session
    把 之前的  MybatisSqlSessionFactoryBean这个就可以
-->
    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
<!--        数据库连接 -->
        <property name="dataSource" ref="dataSource"></property>
<!--        别名-->
       <property name="typeAliasesPackage" value="com.sxt.bean"></property>

        <!--配置mp的分页插件-->
        <property name="plugins">
            <array>
                <!--配置分页插件:拦截对象-->
                <bean class="com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor">
                    <property name="dbType" value="MYSQL"></property>
                    <!--指明要进行分页操作的数据库-->
                </bean>
            </array>
        </property>
    </bean>

<!--   把mapper注入到 ioc容器中    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
<!--    把mapper直接扫描注入到 ioc容器中 默认 id 是首字符串小写     -->
        <property name="basePackage" value="com.sxt.mapper"></property>

<!--        通过sqlsession获取 mapper代理对象-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

<!--    事务的整合 -->
    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据源 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- spring事务配置 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">

        <!-- 事务属性配置 -->
        <tx:attributes>
            <!-- DQL ：查询操作，配置只读事务 -->
            <tx:method name="get*" read-only="true" isolation="REPEATABLE_READ"  propagation="REQUIRED"/>
            <tx:method name="select*" read-only="true" isolation="REPEATABLE_READ"  propagation="REQUIRED"/>
            <tx:method name="find*" read-only="true" isolation="REPEATABLE_READ"  propagation="REQUIRED"/>
            <tx:method name="query*" read-only="true" isolation="REPEATABLE_READ"  propagation="REQUIRED"/>

            <!-- 其他 SQL ：非只读事务 -->
            <tx:method name="*" read-only="false" isolation="REPEATABLE_READ"  propagation="REQUIRED"/>

        </tx:attributes>

    </tx:advice>

    <!-- 配置AOP 切入事务 -->

    <aop:config>
        <!-- 切入点 -->
        <aop:pointcut expression="execution(* com.sxt.service..*.*(..))" id="pt"/>

        <!-- 切面 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt"/>
    </aop:config>


</beans>